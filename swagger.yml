swagger: '2.0'
info:
  title: workflow-manager
  description: Minimal Workflow orchestrator for AWS Batch
  # when changing the version here, make sure to
  # 1. re-run `make generate` to generate clients and server
  # 2. merge the new clients, and, after merging, tag the commit with the version:
  #    git tag -a vX.Y.Z -m "vX.Y.Z"
  #    git push origin --tags
  version: 0.3.3
  x-npm-package: workflow-manager
schemes:
  - http
produces:
  - application/json

responses:
  BadRequest:
    description: "Bad Request"
    schema:
      $ref: "#/definitions/BadRequest"
  InternalError:
    description: "Internal Error"
    schema:
      $ref: "#/definitions/InternalError"
  NotFound:
    description: "Entity Not Found"
    schema:
      $ref: "#/definitions/NotFound"

paths:
  /_health:
    get:
      operationId: healthCheck
      description: Checks if the service is healthy
      responses:
        200:
          description: OK response

  /workflows:
    get:
      operationId: getWorkflows
      description: Get the latest versions of all available workflows
      responses:
        200:
          description: Successfully fetched all workflows
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow'
    post:
      operationId: newWorkflow
      summary: Create a new workflow
      parameters:
        - name: NewWorkflowRequest
          in: body
          schema:
            $ref: '#/definitions/NewWorkflowRequest'
      responses:
        201:
          description: Successful creation of a new workflow
          schema:
            $ref: '#/definitions/Workflow'

  /workflows/{name}:
    get:
      summary: List Workflow Versions by Name
      operationId: getWorkflowVersionsByName
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: latest
          in: query
          type: boolean
          required: false
          default: true
      responses:
        200:
          description: Workflows
          schema:
            type: array
            items:
              $ref: "#/definitions/Workflow"
        404:
          $ref: "#/responses/NotFound"
    put:
      operationId: updateWorkflow
      summary: Update an exiting workflow
      parameters:
        - name: NewWorkflowRequest
          in: body
          schema:
            $ref: '#/definitions/NewWorkflowRequest'
        - name: name
          in: path
          type: string
          required: true
      responses:
        201:
          description: Successful creation of a new workflow
          schema:
            $ref: '#/definitions/Workflow'
        404:
          $ref: "#/responses/NotFound"

  /workflows/{name}/{version}:
    get:
      summary: Get a Workflow by Name and Version
      operationId: getWorkflowByNameAndVersion
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: version
          in: path
          type: integer
          required: true
      responses:
        200:
          description: Workflows
          schema:
            $ref: "#/definitions/Workflow"
        404:
          $ref: "#/responses/NotFound"
  /jobs:
    post:
      summary: Start a job for a workflow
      operationId: startJobForWorkflow
      parameters:
        - name: input
          in: body
          schema:
            $ref: "#/definitions/JobInput"
      responses:
        200:
          description: Respond with Job Id and Name
          schema:
            $ref: "#/definitions/Job"
        404:
          $ref: "#/responses/NotFound"
    get:
      summary: Get summary of all active jobs for workflow
      operationId: getJobsForWorkflow
      parameters:
        - name: workflowName
          in: query
          type: string
          required: true
      responses:
        200:
          description: Job
          schema:
            type: array
            items:
              $ref: "#/definitions/Job"
        404:
          $ref: "#/responses/NotFound"

  /jobs/{jobId}:
    get:
      summary: Get details for the given jobId
      operationId: GetJob
      parameters:
        - name: jobId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Job
          schema:
            $ref: "#/definitions/Job"
        404:
          $ref: "#/responses/NotFound"
    delete:
      summary: Cancel job with the jobId
      operationId: CancelJob
      parameters:
        - name: jobId
          in: path
          type: string
          required: true
        - name: reason
          in: body
          schema:
            $ref: "#/definitions/CancelReason"
          required: true
      responses:
        200:
          type: string
        404:
          $ref: "#/responses/NotFound"

  /state-resources:
    post:
      summary: Create or Update a StateResource
      operationId: postStateResource
      parameters:
        - name: NewStateResource
          in: body
          schema:
            $ref: '#/definitions/NewStateResource'
      responses:
        201:
          description: StateResource Successfully saved
          schema:
            $ref: "#/definitions/StateResource"

  /state-resources/{namespace}/{name}:
    get:
      summary: Get details about StateResource given the namespace and name
      operationId: getStateResource
      parameters:
        - name: namespace
          in: path
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: StateResource
          schema:
            $ref: "#/definitions/StateResource"
        404:
          $ref: "#/responses/NotFound"
    put:
      summary: Create or Update a StateResource for the name and namespace
      operationId: putStateResource
      parameters:
        - name: namespace
          in: path
          type: string
          required: true
        - name: name
          type: string
          in: path
          required: true
        - name: NewStateResource
          in: body
          schema:
            $ref: '#/definitions/NewStateResource'
      responses:
        201:
          description: StateResource Successfully saved
          schema:
            $ref: "#/definitions/StateResource"
        400:
          $ref: "#/responses/BadRequest"
    delete:
      summary: Delete an existing StateResource
      operationId: deleteStateResource
      parameters:
        - name: namespace
          in: path
          type: string
          required: true
        - name: name
          type: string
          in: path
          required: true
      responses:
        200:
          description: StateResource deleted successfully
        404:
          $ref: "#/responses/NotFound"

definitions:
  InternalError:
    type: object
    properties:
      message:
        type: string

  BadRequest:
    type: object
    properties:
      message:
        type: string

  NotFound:
    type: object
    properties:
      message:
        type: string

  NewWorkflowRequest:
    type: object
    properties:
      name:
        type: string
      startAt:
        type: string
      description:
        type: string
      states:
        type: array
        items:
          $ref: '#/definitions/State'

  State:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      comment:
        type: string
      next:
        type: string
      resource:
        type: string
      end:
        type: boolean

  Workflow:
    type: object
    properties:
      id:
        type: string
      revision:
        type: integer
      name:
        type: string
      createdAt:
        type: string
        format: date-time
      startAt:
        type: string
      description:
        type: string
      states:
        type: array
        items:
          $ref: '#/definitions/State'

  Job:
    type: object
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: date-time
      lastUpdated:
        type: string
        format: date-time
      workflow:
        $ref: '#/definitions/Workflow'
      status:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'

  Task:
    type: object
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: date-time
      startedAt:
        type: string
        format: date-time
      stoppedAt:
        type: string
        format: date-time
      state:
        type: string
      status:
        type: string
      statusReason:
        type: string
      Container:
        type: string

  JobInput:
    type: object
    properties:
      workflow:
        $ref: '#/definitions/WorkflowRef'
      data:
        type: array
      namespace:
        type: string
      queue:
        type: string

  WorkflowRef:
    type: object
    properties:
      name:
        type: string
      revision:
        type: integer

  CancelReason:
    type: object
    properties:
      reason:
        type: string

  NewStateResource:
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
      uri:
        type: string

  StateResource:
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
      uri:
        type: string
      lastUpdated:
        type: string
        format: date-time
      type:
        type: string

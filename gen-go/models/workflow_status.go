package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// WorkflowStatus workflow status
// swagger:model WorkflowStatus
type WorkflowStatus string

const (
	WorkflowStatusQueued    WorkflowStatus = "queued"
	WorkflowStatusRunning   WorkflowStatus = "running"
	WorkflowStatusFailed    WorkflowStatus = "failed"
	WorkflowStatusSucceeded WorkflowStatus = "succeeded"
	WorkflowStatusCancelled WorkflowStatus = "cancelled"
)

// for schema
var workflowStatusEnum []interface{}

func init() {
	var res []WorkflowStatus
	if err := json.Unmarshal([]byte(`["queued","running","failed","succeeded","cancelled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workflowStatusEnum = append(workflowStatusEnum, v)
	}
}

func (m WorkflowStatus) validateWorkflowStatusEnum(path, location string, value WorkflowStatus) error {
	if err := validate.Enum(path, location, value, workflowStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this workflow status
func (m WorkflowStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWorkflowStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
